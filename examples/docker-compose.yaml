version: '3.6'

# example docker-compose which connects our local node container to the prod
# database which sits in a traditional datacentre via an SSH tunnel
services:
  
  node:
    image: node:latest
    volumes:
      - ./app:/app
    links:
      - dbtunnel

  dbtunnel:
    image: henriqueamrl/docker-ssh-tunnel
    restart: always
    expose:
      - "3306/tcp"
    environment:
      - LOCAL_PORT=3306
      - REMOTE_PORT=3306
      - REMOTE_SERVER_IP=10.10.36.74
      - SSH_BASTION_HOST=24.342.228.122
      - SSH_USER=dbtunnel
      - SSH_PORT=22
    volumes:
      - ~/.ssh/example/dbtunnel:/ssh_key/id_rsa:ro

  # Example using Docker secrets with _FILE variables
  dbtunnel-secrets:
    image: henriqueamrl/docker-ssh-tunnel
    restart: always
    expose:
      - "3307/tcp"
    environment:
      - LOCAL_PORT_FILE=/run/secrets/local_port
      - REMOTE_PORT_FILE=/run/secrets/remote_port
      - REMOTE_SERVER_IP_FILE=/run/secrets/remote_server_ip
      - SSH_BASTION_HOST_FILE=/run/secrets/ssh_bastion_host
      - SSH_USER_FILE=/run/secrets/ssh_user
      - SSH_PORT_FILE=/run/secrets/ssh_port
      - SSH_KEY_PATH=/run/secrets/ssh_key
    secrets:
      - local_port
      - remote_port
      - remote_server_ip
      - ssh_bastion_host
      - ssh_user
      - ssh_port
      - ssh_key

secrets:
  local_port:
    file: ./secrets/local_port
  remote_port:
    file: ./secrets/remote_port
  remote_server_ip:
    file: ./secrets/remote_server_ip
  ssh_bastion_host:
    file: ./secrets/ssh_bastion_host
  ssh_user:
    file: ./secrets/ssh_user
  ssh_port:
    file: ./secrets/ssh_port
  ssh_key:
    file: ~/.ssh/example/dbtunnel